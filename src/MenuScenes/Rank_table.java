/* 
 * CS321 - Java Programming
 * Final Project - Team 8 - Ultimate Tic-Tac-Toe
 * 
 * Members:
 * Daniel, Ben, Irene, Zach
 */
package MenuScenes;
import PlayerInfo.UserInfo;
import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.table.DefaultTableModel;

/**
 * This class represents our high scores scene.
 * It has a jTable which contains all user high score information. It also has
 * a button to return us to the menu.
 * 
 * @author Ben
 */
public class Rank_table extends javax.swing.JFrame {

    //player 1 and player 2 profile object.
    private final UserInfo p1,p2;
    /**
     * Creates new form Rank_table
     */
    private  final List<UserInfo> user_List = new ArrayList<>();
    
    /**
     * Creates a local class that contains all high score information. 
     * Currently contains score and name.
     */
    public class PlayerInfo {
    public int score;
    public String name;
    
        public PlayerInfo(String name, int score) {
            this.name = name;
            this.score = score;
        }
    }
    
    /**
     * Constructor method.
     * 
     * @param userinfo1 information of user 1
     * @param userinfo2 information of user 2
     */
    public Rank_table(UserInfo userinfo1, UserInfo userinfo2) {
        this.p1 = userinfo1;
        this.p2 = userinfo2;
        initComponents();
        /**
        * This sets the window to the center of the monitor screen
        */
        this.setLocationRelativeTo(null);
    }
    
    /**
     * This method will go through player info array and get name and score
     * then add to list.
     * @return returns sorted list
     */
    public ArrayList sortedList() {
        ArrayList<PlayerInfo> list = new ArrayList<>();
        for(int i =0; i<user_List.size(); i++)
            {
                PlayerInfo player = new PlayerInfo(user_List.get(i).getUsername(), user_List.get(i).getScore());
                list.add(player);
            }

        return list;
    }
    /**
     * Add a row to the jtable based on how many elements we find our we will
     * have in the highscores table.
     */
    public void addRowtoJtable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        ArrayList<PlayerInfo> list = sortedList();
        Object rowData[]=new Object[2];
        for(int i =0; i<list.size();i++) {
            rowData[0]=list.get(i).name;
            rowData[1]=list.get(i).score;
            model.addRow(rowData);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Count Move"
            }
        ));
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Return");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel1.setText("LeaderBoard");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(94, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(232, 232, 232))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(234, 234, 234))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Return Button.
     * Takes us bake to the menu.
     * 
     * @param evt event parameter
     */
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        MenuGUI s = new MenuGUI(p1,p2);
        s.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1MouseClicked
    
    /**
     * Method for reading the rank.data file, used when we want to display the 
     * high scores to the user 
     */
    public void FileReader() {
        String fileName = "Rank.data";

        List<String> list = new ArrayList<>();

        try (BufferedReader br = Files.newBufferedReader(Paths.get(fileName))) {

                //br returns as stream and convert it into a List
                list = br.lines().collect(Collectors.toList());

        } catch (IOException e) {
                e.printStackTrace(System.out);
        }

        for(int i=0; i<list.size();i++)
        {
        String[] details = (list.get(i)).split(",");
        String username=details[0];
        int score = Integer.parseInt(details[1]);
        UserInfo player = new UserInfo();
        player.setUsername(username);
        player.setScore(score);
        user_List.add(player);
        }

        Sort_list(user_List, user_List.size());
    }
    
    /**
     * Sorts the high score table based on who had the lowest move count at the 
     * top. 
     * 
     * @param user_List Array of all users in highscores
     * @param count number of elements in highscores.
     */
    public void Sort_list(List<UserInfo> user_List, int count){
        int i,j;
        UserInfo temp = new UserInfo();
        for(i=0; i<count; i++){
            for(j=0; j<(count-i - 1); j++){
                if(user_List.get(j).getScore() > user_List.get(j+1).getScore()){
                     temp.setUsername(user_List.get(j).getUsername());
                     temp.setScore(user_List.get(j).getScore());
                     user_List.get(j).setUsername(user_List.get(j+1).getUsername());
                     user_List.get(j).setScore(user_List.get(j+1).getScore());
                     user_List.get(j+1).setUsername(temp.getUsername());
                     user_List.get(j+1).setScore(temp.getScore());
                 }
            }
        }
    }
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
